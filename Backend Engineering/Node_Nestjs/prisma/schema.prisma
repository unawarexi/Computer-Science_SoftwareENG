// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(cuid())
  firstName String?
  lastName  String?
  username  String   @unique
  email     String   @unique
  hash      String
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Bookmarks Bookmarks[]
  Posts     Posts[]
  Comments  Comments[]
  Likes     Likes[]
  Followers Follows[] @relation("Followers")
  Following Follows[] @relation("Following")
}


model Posts {
  id        String   @id @default(cuid())
  title     String
  content   String?
  imageUrl  String?
  published Boolean  @default(false)
  authorId  String
  author    Users    @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Comments Comments[]
  Likes    Likes[]
}

model Bookmarks {
  id        String   @id @default(cuid())
  title     String
  author    String
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comments {
  id        String   @id @default(cuid())
  content   String
  postId    String
  post      Posts    @relation(fields: [postId], references: [id])
  authorId  String
  author    Users    @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Likes {
  id        String   @id @default(cuid())
  postId    String
  post      Posts    @relation(fields: [postId], references: [id])
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Follows {
  id         String   @id @default(cuid())
  followerId String
  followingId String
  follower   Users    @relation("Followers", fields: [followerId], references: [id])
  following  Users    @relation("Following", fields: [followingId], references: [id])
  createdAt  DateTime @default(now())
}
